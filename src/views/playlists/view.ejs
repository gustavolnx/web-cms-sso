<!-- Remover jQuery e jQuery UI e usar Sortable.js -->
<script src="https://cdn.jsdelivr.net/npm/sortablejs@1.15.0/Sortable.min.js"></script>

<style>
    .drag-handle {
        cursor: grab;
        width: 36px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: #666;
        position: absolute;
        left: 0;
        top: 0;
        bottom: 0;
        background: #f8f9fa;
        border-right: 1px solid #ddd;
    }
    
    .drag-handle:active {
        cursor: grabbing;
    }
    
    .playlist-item {
        position: relative;
        border: 1px solid #ddd;
        margin-bottom: 5px;
        border-radius: 4px;
        background: #fff;
    }
    
    .playlist-item .d-flex.align-items-center.flex-grow-1 {
        margin-left: 36px;
    }
    
    .playlist-item.sortable-chosen {
        background: #f8f9fa;
        box-shadow: 0 5px 15px rgba(0,0,0,0.2);
        opacity: 0.6;
    }
    
    .playlist-item.sortable-ghost {
        background: #f0f8ff;
        border: 2px dashed #007bff;
    }
    
    .playlist-item.selected {
        background-color: rgba(0, 123, 255, 0.05);
        border-left: 3px solid #007bff;
    }
    
    .item-select-checkbox {
        display: none;
        margin-right: 10px;
    }
    
    .selection-mode .list-group-item {
        padding-left: 40px;
    }
    
    .spin {
        animation: spin 1s linear infinite;
    }
    
    @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }
</style>

<div class="row mb-4">
    <div class="col-12">
        <div class="d-flex justify-content-between align-items-center">
            <h1 class="mb-0">
                <i class="bi bi-collection-play me-2 text-primary"></i><%= playlist.name %>
                <% if (!playlist.active) { %>
                    <span class="badge bg-secondary ms-2">Inativa</span>
                <% } %>
            </h1>
            <div>
                <a href="/playlists/<%= playlist._id %>/edit" class="btn btn-outline-primary me-2">
                    <i class="bi bi-pencil me-2"></i>Editar
                </a>
                <a href="/playlists" class="btn btn-outline-secondary">
                    <i class="bi bi-arrow-left me-2"></i>Voltar
                </a>
            </div>
        </div>
        <hr>
    </div>
</div>

<% if (!playlist.active) { %>
<div class="row mb-4">
    <div class="col-12">
        <div class="alert alert-warning">
            <i class="bi bi-exclamation-triangle-fill me-2"></i>
            <strong>Atenção:</strong> Esta playlist está marcada como inativa. Ela não será exibida nos players e não poderá ser exportada até que seja reativada.
        </div>
    </div>
</div>
<% } %>

<div class="row mb-4">
    <div class="col-md-8">
        <div class="card shadow-sm h-100">
            <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                <h5 class="mb-0"><i class="bi bi-list-ul me-2"></i>Itens da Playlist</h5>
                <div>
                    <button id="toggleSelectionMode" class="btn btn-sm btn-outline-light me-2">
                        <i class="bi bi-check2-square me-1"></i>Modo Seleção
                    </button>
                    <button id="save-playlist-order" class="btn btn-sm btn-success me-2" style="display: none;">
                        <i class="bi bi-save me-1"></i>Salvar ordenação
                    </button>
                    <a href="/playlists/<%= playlist._id %>/items/add" class="btn btn-sm btn-light">
                        <i class="bi bi-plus-circle me-1"></i>Adicionar Item
                    </a>
                </div>
            </div>
            
            <!-- Barra de ferramentas de seleção -->
            <div id="selectionToolbar" class="bg-light p-2 d-none">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <span id="selectedCount" class="badge bg-primary me-2">0</span> 
                        <span>item(s) selecionado(s)</span>
                        <button id="selectAll" class="btn btn-sm btn-outline-secondary ms-2">Selecionar Todos</button>
                        <button id="deselectAll" class="btn btn-sm btn-outline-secondary ms-2">Desmarcar Todos</button>
                    </div>
                    <div>
                        <button id="deleteSelectedBtn" class="btn btn-sm btn-danger" disabled>
                            <i class="bi bi-trash me-1"></i>Excluir Selecionados
                        </button>
                    </div>
                </div>
            </div>
            
            <div class="card-body">
                <% if (playlist.items && playlist.items.length > 0) { %>
                    <div id="reorderIndicator" class="alert alert-primary text-center mb-3">
                        <i class="bi bi-arrow-down-up me-2"></i> Arraste os itens pela <i class="bi bi-grip-vertical ms-1 me-1"></i> para reordenar a playlist
                    </div>
                    
                    <div class="list-group" id="playlist-items-container" data-playlist-id="<%= playlist._id.toString() %>">
                        <% playlist.items.sort((a, b) => a.order - b.order).forEach((item, index) => { %>
                            <div class="list-group-item d-flex justify-content-between align-items-center playlist-item" data-id="<%= item._id %>">
                                <div class="item-select-checkbox" style="display: none;">
                                    <input type="checkbox" class="form-check-input item-checkbox" value="<%= item._id %>">
                                </div>
                                
                                <div class="d-flex align-items-center flex-grow-1">
                                    <div class="drag-handle me-2" title="Clique e arraste para reordenar">
                                        <i class="bi bi-grip-vertical fs-5"></i>
                                    </div>
                                    
                                    <span class="badge bg-secondary me-2 item-badge"><%= index + 1 %></span>
                                    
                                    <div>
                                        <h6 class="mb-0">
                                            <% if (item.type === 'playlist') { %>
                                                <i class="bi bi-collection-play text-success me-1"></i>
                                                <%= item.subPlaylist ? item.subPlaylist.name : 'Subplaylist não encontrada' %>
                                                <span class="badge bg-success ms-1">Subplaylist</span>
                                            <% } else if (item.type === 'rss') { %>
                                                <i class="bi bi-rss text-warning me-1"></i>
                                                <%= item.rss ? item.rss.name : 'Feed RSS não encontrado' %>
                                                <span class="badge bg-warning text-dark ms-1">RSS</span>
                                            <% } else { %>
                                                <%= item.media.name %>
                                            <% } %>
                                            <% if (item.startDateTime || item.endDateTime) { %>
                                                <i class="bi bi-calendar-event text-info ms-1" data-bs-toggle="tooltip" data-bs-placement="top" 
                                                   title="<%= item.startDateTime ? 'Início: ' + new Date(item.startDateTime).toLocaleString() : 'Sem data de início' %><%= item.startDateTime && item.endDateTime ? ' - ' : '' %><%= item.endDateTime ? 'Fim: ' + new Date(item.endDateTime).toLocaleString() : '' %>"></i>
                                            <% } %>
                                        </h6>
                                        <small class="text-muted">
                                            <% if (item.type === 'playlist') { %>
                                                Subplaylist • <%= item.duration ? item.duration + ' segundos' : 'Duração total da subplaylist' %>
                                            <% } else if (item.type === 'rss') { %>
                                                Feed RSS • <%= item.duration ? item.duration + ' segundos' : 'Duração padrão' %>
                                            <% } else { %>
                                                <%= item.media.type %> • 
                                                <% if (item.duration) { %>
                                                    <%= item.duration %> segundos
                                                <% } else { %>
                                                    Duração padrão
                                                <% } %>
                                            <% } %>
                                            <% if (item.startDateTime || item.endDateTime) { %>
                                                • <span class="text-info">Agendado</span>
                                            <% } %>
                                        </small>
                                    </div>
                                </div>
                                
                                <div class="ms-auto d-flex">
                                    <% if (item.type === 'playlist') { %>
                                        <a href="/playlists/<%= item.subPlaylist._id %>" class="btn btn-sm btn-outline-secondary me-2" title="Ver subplaylist">
                                            <i class="bi bi-eye"></i>
                                        </a>
                                    <% } else if (item.type === 'rss' && item.rss) { %>
                                        <a href="/rss/<%= item.rss._id %>" class="btn btn-sm btn-outline-secondary me-2" title="Ver feed RSS">
                                            <i class="bi bi-eye"></i>
                                        </a>
                                    <% } else { %>
                                        <a href="/playlists/<%= playlist._id %>/items/<%= item._id %>/edit" class="btn btn-sm btn-outline-secondary me-2">
                                            <i class="bi bi-pencil"></i>
                                        </a>
                                    <% } %>
                                    <form action="/playlists/<%= playlist._id %>/items/<%= item._id %>/delete" method="POST" class="d-inline">
                                        <button type="submit" class="btn btn-sm btn-outline-danger item-delete-btn" 
                                               onclick="return confirm('Tem certeza que deseja remover este item da playlist?')">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </form>
                                </div>
                            </div>
                        <% }); %>
                    </div>
                <% } else { %>
                    <div class="text-center py-5">
                        <i class="bi bi-collection-play text-muted icon-large mb-3"></i>
                        <h5>Nenhum item na playlist</h5>
                        <p class="text-muted">Adicione mídias para começar a montar sua playlist.</p>
                        <a href="/playlists/<%= playlist._id %>/items/add" class="btn btn-primary mt-2">
                            <i class="bi bi-plus-circle me-2"></i>Adicionar Item
                        </a>
                    </div>
                <% } %>
            </div>
        </div>
    </div>
    
    <div class="col-md-4">
        <div class="card shadow-sm mb-4">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0"><i class="bi bi-info-circle me-2"></i>Informações</h5>
            </div>
            <div class="card-body">
                <% if (playlist.thumbnail) { %>
                    <div class="text-center mb-3">
                        <img src="/api/media/<%= playlist.thumbnail._id %>/file" alt="<%= playlist.name %>" 
                             class="img-thumbnail" style="max-height: 150px; object-fit: contain;">
                    </div>
                <% } %>
                
                <ul class="list-group list-group-flush">
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <span><i class="bi bi-tag me-2"></i>Nome:</span>
                        <span class="fw-bold"><%= playlist.name %></span>
                    </li>
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <span><i class="bi bi-diagram-3 me-2"></i>Grupo:</span>
                        <span class="badge bg-secondary"><%= playlist.group ? playlist.group.name : 'Sem grupo' %></span>
                    </li>
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <span><i class="bi bi-collection me-2"></i>Itens:</span>
                        <span class="badge bg-primary"><%= playlist.items ? playlist.items.length : 0 %></span>
                    </li>
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <span><i class="bi bi-toggle-on me-2"></i>Status:</span>
                        <span class="badge <%= playlist.active ? 'bg-success' : 'bg-secondary' %>">
                            <%= playlist.active ? 'Ativa' : 'Inativa' %>
                        </span>
                    </li>
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <span><i class="bi bi-clock-history me-2"></i>Criado em:</span>
                        <span><%= new Date(playlist.createdAt).toLocaleDateString() %></span>
                    </li>
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <span><i class="bi bi-clock me-2"></i>Atualizado em:</span>
                        <span><%= new Date(playlist.updatedAt).toLocaleDateString() %></span>
                    </li>
                </ul>
                
                <% if (playlist.description) { %>
                    <div class="mt-3">
                        <h6><i class="bi bi-card-text me-2"></i>Descrição:</h6>
                        <p class="text-muted"><%= playlist.description %></p>
                    </div>
                <% } %>
            </div>
        </div>
        
        <div class="card shadow-sm">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0"><i class="bi bi-display me-2"></i>Players Associados</h5>
            </div>
            <div class="card-body">
                <% if (locals.players && players.length > 0) { %>
                    <div class="list-group">
                        <% players.forEach(function(player) { %>
                            <div class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                                <div>
                                    <h6 class="mb-1"><%= player.name %></h6>
                                    <small class="text-muted"><%= player.uniqueId %></small>
                                </div>
                                <span class="badge <%= player.authorized ? 'bg-success' : 'bg-danger' %>">
                                    <%= player.authorized ? 'Autorizado' : 'Não Autorizado' %>
                                </span>
                            </div>
                        <% }); %>
                    </div>
                <% } else { %>
                    <div class="text-center py-4">
                        <i class="bi bi-display text-muted icon-medium mb-3"></i>
                        <p class="mb-0">Nenhum player associado a esta playlist</p>
                    </div>
                <% } %>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-12">
        <div class="card shadow-sm">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0"><i class="bi bi-gear me-2"></i>Ações</h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-4 mb-3 mb-md-0">
                        <div class="d-grid">
                            <a href="/playlists/<%= playlist._id %>/export" class="btn btn-outline-primary" target="_blank">
                                <i class="bi bi-download me-2"></i>Exportar Playlist
                            </a>
                        </div>
                    </div>
                    <div class="col-md-4 mb-3 mb-md-0">
                        <div class="d-grid">
                            <a href="/playlists/<%= playlist._id %>/preview" class="btn btn-outline-success">
                                <i class="bi bi-play-circle me-2"></i>Visualizar Playlist
                            </a>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="d-grid">
                            <form action="/playlists/<%= playlist._id %>/delete" method="POST" class="d-inline">
                                <button type="submit" class="btn btn-outline-danger w-100 btn-delete">
                                    <i class="bi bi-trash me-2"></i>Excluir Playlist
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
// Usando SortableJS para implementar a funcionalidade de arrastar e soltar
document.addEventListener('DOMContentLoaded', function() {
    const playlistContainer = document.getElementById('playlist-items-container');
    const saveButton = document.getElementById('save-playlist-order');
    const toggleSelectionButton = document.getElementById('toggleSelectionMode');
    const selectionToolbar = document.getElementById('selectionToolbar');
    const selectAllButton = document.getElementById('selectAll');
    const deselectAllButton = document.getElementById('deselectAll');
    const deleteSelectedButton = document.getElementById('deleteSelectedBtn');
    const checkboxes = document.querySelectorAll('.item-checkbox');
    const itemSelectContainers = document.querySelectorAll('.item-select-checkbox');
    
    let inSelectionMode = false;
    let sortableInstance = null;
    
    // Inicializar o Sortable
    initSortable();
    
    function initSortable() {
        if (sortableInstance) {
            sortableInstance.destroy();
        }
        
        if (!playlistContainer) return;
        
        try {
            sortableInstance = new Sortable(playlistContainer, {
                animation: 150,
                handle: '.drag-handle',
                ghostClass: 'sortable-ghost',
                chosenClass: 'sortable-chosen',
                onEnd: function() {
                    // Atualizar numeração
                    updateItemNumbers();
                    // Mostrar botão salvar
                    saveButton.style.display = 'block';
                }
            });
            
            console.log('Sortable inicializado com sucesso');
        } catch (error) {
            console.error('Erro ao inicializar Sortable:', error);
        }
    }
    
    // Atualizar numeração dos itens
    function updateItemNumbers() {
        const items = Array.from(playlistContainer.children);
        items.forEach((item, index) => {
            const badge = item.querySelector('.item-badge');
            if (badge) {
                badge.textContent = index + 1;
            }
        });
    }
    
    // Botão para salvar a ordem
    saveButton.addEventListener('click', function() {
        // Desabilitar o botão
        this.disabled = true;
        this.innerHTML = '<i class="bi bi-arrow-repeat spin me-1"></i>Salvando...';
        
        // Obter IDs na nova ordem
        const itemIds = Array.from(playlistContainer.children).map(item => 
            item.getAttribute('data-id')
        );
        
        // Obter ID da playlist
        const playlistId = playlistContainer.getAttribute('data-playlist-id');
        
        // Fazer requisição para salvar a ordem
        const xhr = new XMLHttpRequest();
        xhr.open('POST', `/api/playlists/${playlistId}/reorder`, true);
        xhr.setRequestHeader('Content-Type', 'application/json');
        
        xhr.onload = function() {
            if (xhr.status >= 200 && xhr.status < 300) {
                alert('Ordem salva com sucesso!');
                window.location.reload();
            } else {
                console.error('Erro ao salvar ordem:', xhr.statusText);
                alert('Erro ao salvar a ordem. Tente novamente.');
                saveButton.disabled = false;
                saveButton.innerHTML = '<i class="bi bi-save me-1"></i>Salvar ordenação';
            }
        };
        
        xhr.onerror = function() {
            console.error('Erro de rede ao salvar ordem');
            alert('Erro de conexão ao salvar a ordem. Tente novamente.');
            saveButton.disabled = false;
            saveButton.innerHTML = '<i class="bi bi-save me-1"></i>Salvar ordenação';
        };
        
        xhr.send(JSON.stringify({ itemIds: itemIds }));
    });
    
    // Toggle modo de seleção
    toggleSelectionButton.addEventListener('click', function() {
        inSelectionMode = !inSelectionMode;
        
        if (inSelectionMode) {
            // Ativar modo de seleção
            selectionToolbar.classList.remove('d-none');
            playlistContainer.classList.add('selection-mode');
            this.classList.remove('btn-outline-light');
            this.classList.add('btn-light');
            
            // Mostrar checkboxes
            itemSelectContainers.forEach(container => {
                container.style.display = 'block';
            });
            
            // Esconder botão salvar
            saveButton.style.display = 'none';
            
            // Desativar Sortable
            if (sortableInstance) {
                sortableInstance.option('disabled', true);
            }
        } else {
            // Desativar modo de seleção
            selectionToolbar.classList.add('d-none');
            playlistContainer.classList.remove('selection-mode');
            this.classList.add('btn-outline-light');
            this.classList.remove('btn-light');
            
            // Esconder checkboxes
            itemSelectContainers.forEach(container => {
                container.style.display = 'none';
            });
            
            // Remover seleção
            deselectAll();
            
            // Reativar Sortable
            if (sortableInstance) {
                sortableInstance.option('disabled', false);
            } else {
                initSortable();
            }
        }
    });
    
    // Selecionar todos
    selectAllButton.addEventListener('click', function() {
        checkboxes.forEach(checkbox => {
            checkbox.checked = true;
            const listItem = checkbox.closest('.list-group-item');
            if (listItem) {
                listItem.classList.add('selected');
            }
        });
        updateSelectedCount();
    });
    
    // Desmarcar todos
    deselectAllButton.addEventListener('click', deselectAll);
    
    function deselectAll() {
        checkboxes.forEach(checkbox => {
            checkbox.checked = false;
            const listItem = checkbox.closest('.list-group-item');
            if (listItem) {
                listItem.classList.remove('selected');
            }
        });
        updateSelectedCount();
    }
    
    // Atualizar contador de selecionados
    function updateSelectedCount() {
        const selectedCount = document.querySelectorAll('.item-checkbox:checked').length;
        document.getElementById('selectedCount').textContent = selectedCount;
        deleteSelectedButton.disabled = selectedCount === 0;
    }
    
    // Eventos para checkboxes
    checkboxes.forEach(checkbox => {
        checkbox.addEventListener('change', function() {
            const listItem = this.closest('.list-group-item');
            if (this.checked) {
                listItem.classList.add('selected');
            } else {
                listItem.classList.remove('selected');
            }
            updateSelectedCount();
        });
    });
    
    // Permitir clicar em qualquer parte do item para selecionar
    Array.from(playlistContainer.querySelectorAll('.playlist-item')).forEach(item => {
        item.addEventListener('click', function(e) {
            if (!inSelectionMode) return;
            
            // Não ativar se clicar em botões ou links
            if (e.target.tagName === 'A' || e.target.tagName === 'BUTTON' || 
                e.target.closest('a') || e.target.closest('button') ||
                e.target.type === 'checkbox') {
                return;
            }
            
            const checkbox = this.querySelector('.item-checkbox');
            checkbox.checked = !checkbox.checked;
            
            if (checkbox.checked) {
                this.classList.add('selected');
            } else {
                this.classList.remove('selected');
            }
            
            updateSelectedCount();
        });
    });
    
    // Botão excluir selecionados
    deleteSelectedButton.addEventListener('click', function() {
        const selectedItems = Array.from(document.querySelectorAll('.item-checkbox:checked'));
        
        if (selectedItems.length === 0) {
            alert('Selecione pelo menos um item para excluir.');
            return;
        }
        
        // Confirmação
        if (!confirm(`Tem certeza que deseja excluir ${selectedItems.length} item(ns) da playlist?`)) {
            return;
        }
        
        // Obter IDs dos itens
        const itemIds = selectedItems.map(checkbox => checkbox.value);
        const playlistId = playlistContainer.getAttribute('data-playlist-id');
        
        // Fazer requisição
        const xhr = new XMLHttpRequest();
        xhr.open('POST', `/api/playlists/${playlistId}/items/delete-multiple`, true);
        xhr.setRequestHeader('Content-Type', 'application/json');
        
        xhr.onload = function() {
            if (xhr.status >= 200 && xhr.status < 300) {
                const response = JSON.parse(xhr.responseText);
                alert(`${response.deleted} item(ns) excluído(s) com sucesso!`);
                window.location.reload();
            } else {
                alert('Ocorreu um erro ao excluir os itens. Tente novamente.');
            }
        };
        
        xhr.onerror = function() {
            alert('Erro de conexão ao excluir os itens. Tente novamente.');
        };
        
        xhr.send(JSON.stringify({ itemIds: itemIds }));
    });
    
    // Inicializar tooltips do Bootstrap, se disponível
    if (typeof bootstrap !== 'undefined' && bootstrap.Tooltip) {
        const tooltipTriggerList = Array.from(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        tooltipTriggerList.forEach(tooltipTriggerEl => {
            new bootstrap.Tooltip(tooltipTriggerEl);
        });
    }
});
</script> 