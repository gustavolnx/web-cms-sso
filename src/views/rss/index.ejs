<%- contentFor('body') %>

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1 class="h3">Fontes RSS</h1>
    <a href="/rss/add" class="btn btn-primary">
        <i class="bi bi-plus-circle me-2"></i> Nova Fonte RSS
    </a>
</div>

<% if (messages.success) { %>
    <div class="alert alert-success" role="alert">
        <%= messages.success %>
    </div>
<% } %>

<% if (messages.error) { %>
    <div class="alert alert-danger" role="alert">
        <%= messages.error %>
    </div>
<% } %>

<div class="card shadow-sm">
    <div class="card-header bg-white">
        <div class="row align-items-center">
            <div class="col">
                <h5 class="mb-0">Gerenciar Fontes RSS</h5>
            </div>
        </div>
    </div>
    <div class="card-body p-0">
        <div class="table-responsive">
            <table class="table table-hover mb-0">
                <thead class="table-light">
                    <tr>
                        <th scope="col">Nome</th>
                        <th scope="col">Fonte</th>
                        <th scope="col">URL</th>
                        <th scope="col">Grupo</th>
                        <th scope="col">Status</th>
                        <th scope="col" class="text-center">Ações</th>
                    </tr>
                </thead>
                <tbody>
                    <% if (rssItems && rssItems.length > 0) { %>
                        <% rssItems.forEach(rssItem => { %>
                            <tr>
                                <td>
                                    <a href="/rss/details/<%= rssItem._id %>" class="text-decoration-none text-dark">
                                        <%= rssItem.name %>
                                    </a>
                                </td>
                                <td><%= rssItem.source %></td>
                                <td>
                                    <span class="text-truncate d-inline-block" style="max-width: 200px;">
                                        <%= rssItem.url %>
                                    </span>
                                </td>
                                <td><%= rssItem.group ? rssItem.group.name : 'N/A' %></td>
                                <td>
                                    <% if (rssItem.active) { %>
                                        <span class="badge bg-success">Ativo</span>
                                    <% } else { %>
                                        <span class="badge bg-danger">Inativo</span>
                                    <% } %>
                                </td>
                                <td class="text-center">
                                    <div class="btn-group">
                                        <a href="/rss/details/<%= rssItem._id %>" class="btn btn-sm btn-outline-secondary" title="Detalhes">
                                            <i class="bi bi-eye"></i>
                                        </a>
                                        <a href="/rss/edit/<%= rssItem._id %>" class="btn btn-sm btn-outline-primary" title="Editar">
                                            <i class="bi bi-pencil"></i>
                                        </a>
                                        <button 
                                            type="button" 
                                            class="btn btn-sm btn-outline-success add-to-playlist-btn" 
                                            data-id="<%= rssItem._id %>" 
                                            data-name="<%= rssItem.name %>"
                                            title="Adicionar à Playlist">
                                            <i class="bi bi-plus-circle"></i>
                                        </button>
                                        <button 
                                            type="button" 
                                            class="btn btn-sm btn-outline-danger delete-rss" 
                                            data-id="<%= rssItem._id %>" 
                                            data-name="<%= rssItem.name %>"
                                            title="Excluir">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        <% }); %>
                    <% } else { %>
                        <tr>
                            <td colspan="6" class="text-center py-3">
                                <div class="text-muted">
                                    <i class="bi bi-info-circle me-2"></i> Nenhuma fonte RSS encontrada.
                                </div>
                            </td>
                        </tr>
                    <% } %>
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Modal de confirmação para exclusão -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirmar Exclusão</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fechar"></button>
            </div>
            <div class="modal-body">
                <p>Tem certeza que deseja excluir a fonte RSS "<span id="deleteItemName"></span>"?</p>
                <p class="text-danger"><small>Esta ação não pode ser desfeita.</small></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-danger" id="confirmDelete">Excluir</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal para adicionar à playlist -->
<div class="modal fade" id="addToPlaylistModal" tabindex="-1" aria-labelledby="addToPlaylistModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addToPlaylistModalLabel">Adicionar à Playlist</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fechar"></button>
            </div>
            <div class="modal-body">
                <p>Selecione uma playlist para adicionar a fonte RSS "<span id="rssItemName"></span>":</p>
                
                <div id="playlistsLoading" class="text-center py-3">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Carregando...</span>
                    </div>
                    <p class="mt-2">Carregando playlists...</p>
                </div>
                
                <div id="playlistsError" class="alert alert-danger d-none" role="alert">
                    Erro ao carregar playlists. Por favor, tente novamente.
                </div>
                
                <div id="playlistsList" class="d-none">
                    <div class="list-group" id="playlists-container">
                        <!-- Lista de playlists será carregada aqui via JavaScript -->
                    </div>
                    
                    <div class="mt-3 text-center d-none" id="noPlaylistsMessage">
                        <p class="text-muted">
                            <i class="bi bi-info-circle me-2"></i> Nenhuma playlist disponível.
                        </p>
                        <a href="/playlists/new" class="btn btn-sm btn-primary">
                            <i class="bi bi-plus-circle me-2"></i> Criar Nova Playlist
                        </a>
                    </div>
                </div>
                
                <!-- Opções adicionais para a fonte RSS -->
                <div class="mt-4 border-top pt-3 d-none" id="playlistOptions">
                    <h6>Opções adicionais:</h6>
                    <div class="mb-3">
                        <label for="duration" class="form-label">Duração (segundos):</label>
                        <input type="number" class="form-control" id="duration" name="duration" value="60" min="1">
                        <div class="form-text">Tempo em segundos que cada notícia será exibida</div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" id="confirmAddToPlaylist" disabled>Adicionar</button>
            </div>
        </div>
    </div>
</div>

<%- contentFor('scripts') %>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Configuração do modal de exclusão
        const deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
        const deleteItemNameElement = document.getElementById('deleteItemName');
        const confirmDeleteButton = document.getElementById('confirmDelete');
        
        // ID do item a ser excluído
        let deleteItemId = null;
        
        // Evento de clique nos botões de exclusão
        document.querySelectorAll('.delete-rss').forEach(button => {
            button.addEventListener('click', function() {
                deleteItemId = this.dataset.id;
                deleteItemNameElement.textContent = this.dataset.name;
                deleteModal.show();
            });
        });
        
        // Evento de clique no botão de confirmação
        confirmDeleteButton.addEventListener('click', function() {
            if (deleteItemId) {
                // Enviar requisição DELETE para a API
                fetch(`/rss/delete/${deleteItemId}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    deleteModal.hide();
                    
                    if (data.success) {
                        // Redirecionar para atualizar a página
                        window.location.href = '/rss';
                    } else {
                        alert('Erro ao excluir: ' + data.error);
                    }
                })
                .catch(error => {
                    console.error('Erro:', error);
                    alert('Erro ao processar a solicitação');
                });
            }
        });
        
        // ========== ADIÇÃO À PLAYLIST ==========
        // Configuração do modal de adição à playlist
        const addToPlaylistModal = new bootstrap.Modal(document.getElementById('addToPlaylistModal'));
        const rssItemNameElement = document.getElementById('rssItemName');
        const confirmAddToPlaylistButton = document.getElementById('confirmAddToPlaylist');
        const playlistsLoadingElement = document.getElementById('playlistsLoading');
        const playlistsErrorElement = document.getElementById('playlistsError');
        const playlistsListElement = document.getElementById('playlistsList');
        const noPlaylistsMessageElement = document.getElementById('noPlaylistsMessage');
        const playlistOptionsElement = document.getElementById('playlistOptions');
        const playlistsContainerElement = document.getElementById('playlists-container');
        
        // IDs e variáveis para o processo de adição à playlist
        let selectedRssId = null;
        let selectedPlaylistId = null;
        
        // Evento de clique nos botões "Adicionar à Playlist"
        document.querySelectorAll('.add-to-playlist-btn').forEach(button => {
            button.addEventListener('click', function() {
                selectedRssId = this.dataset.id;
                rssItemNameElement.textContent = this.dataset.name;
                
                // Resetar o estado do modal
                playlistsLoadingElement.classList.remove('d-none');
                playlistsErrorElement.classList.add('d-none');
                playlistsListElement.classList.add('d-none');
                playlistOptionsElement.classList.add('d-none');
                noPlaylistsMessageElement.classList.add('d-none');
                confirmAddToPlaylistButton.disabled = true;
                selectedPlaylistId = null;
                playlistsContainerElement.innerHTML = '';
                
                // Exibir o modal
                addToPlaylistModal.show();
                
                // Carregar playlists disponíveis
                loadAvailablePlaylists();
            });
        });
        
        // Função para carregar playlists disponíveis
        function loadAvailablePlaylists() {
            fetch('/api/playlists', {
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': 'application/json'
                }
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error(`Erro na resposta: ${response.status} ${response.statusText}`);
                }
                return response.json();
            })
            .then(data => {
                playlistsLoadingElement.classList.add('d-none');
                
                if (data.success && data.data && data.data.length > 0) {
                    // Exibir a lista de playlists
                    playlistsListElement.classList.remove('d-none');
                    
                    // Preencher a lista com as playlists
                    data.data.forEach(playlist => {
                        const playlistItem = document.createElement('button');
                        playlistItem.type = 'button';
                        playlistItem.className = 'list-group-item list-group-item-action d-flex justify-content-between align-items-center';
                        playlistItem.dataset.id = playlist._id;
                        
                        playlistItem.innerHTML = `
                            <div>
                                <h6 class="mb-1">${playlist.name}</h6>
                                <small class="text-muted">${playlist.group ? playlist.group.name : 'Sem grupo'}</small>
                            </div>
                            <span class="badge bg-primary rounded-pill">${playlist.items ? playlist.items.length : 0} itens</span>
                        `;
                        
                        playlistItem.addEventListener('click', function() {
                            // Remover a classe 'active' de todos os itens
                            document.querySelectorAll('#playlists-container .list-group-item').forEach(item => {
                                item.classList.remove('active');
                            });
                            
                            // Adicionar a classe 'active' ao item clicado
                            this.classList.add('active');
                            
                            // Armazenar o ID da playlist selecionada
                            selectedPlaylistId = this.dataset.id;
                            
                            // Habilitar o botão de confirmação
                            confirmAddToPlaylistButton.disabled = false;
                            
                            // Mostrar opções adicionais
                            playlistOptionsElement.classList.remove('d-none');
                        });
                        
                        playlistsContainerElement.appendChild(playlistItem);
                    });
                } else {
                    // Exibir mensagem de nenhuma playlist
                    playlistsListElement.classList.remove('d-none');
                    noPlaylistsMessageElement.classList.remove('d-none');
                }
            })
            .catch(error => {
                console.error('Erro ao carregar playlists:', error);
                playlistsLoadingElement.classList.add('d-none');
                playlistsErrorElement.classList.remove('d-none');
                playlistsErrorElement.textContent = `Erro ao carregar playlists: ${error.message}`;
            });
        }
        
        // Evento de clique no botão de confirmação de adição à playlist
        confirmAddToPlaylistButton.addEventListener('click', function() {
            if (selectedRssId && selectedPlaylistId) {
                const duration = document.getElementById('duration').value || 60;
                
                // Mostrar indicador de carregamento
                confirmAddToPlaylistButton.disabled = true;
                confirmAddToPlaylistButton.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Adicionando...';
                
                // Enviar requisição para adicionar RSS à playlist
                fetch(`/api/playlists/${selectedPlaylistId}/add-rss`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        rssId: selectedRssId,
                        duration: parseInt(duration)
                    })
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`Erro na resposta: ${response.status} ${response.statusText}`);
                    }
                    return response.json();
                })
                .then(data => {
                    addToPlaylistModal.hide();
                    
                    if (data.success) {
                        // Exibir mensagem de sucesso
                        alert('Fonte RSS adicionada à playlist com sucesso!');
                    } else {
                        alert('Erro ao adicionar à playlist: ' + (data.message || 'Erro desconhecido'));
                    }
                })
                .catch(error => {
                    console.error('Erro:', error);
                    alert('Erro ao processar a solicitação: ' + error.message);
                    
                    // Restaurar o botão
                    confirmAddToPlaylistButton.disabled = false;
                    confirmAddToPlaylistButton.innerHTML = 'Adicionar';
                });
            }
        });
    });
</script> 